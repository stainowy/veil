name: Deploy Documentation (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-docs:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Setup MSVC Build Tools
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Build Velang compiler (Release)
      run: cargo build --release

    - name: Setup MSVC environment and compile ve program
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        call "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat" 2>nul || ^
        (echo "Could not find Visual Studio installation" && exit /b 1)
        .\target\release\ve .\docs\server.ve

    - name: Start server in background
      run: Start-Process -NoNewWindow -FilePath "${{ github.workspace }}\docs\build\program.exe"

    - name: Wait for server to start
      run: Start-Sleep -Seconds 5

    - name: Test server endpoints
      shell: bash
      run: |
        curl -f http://localhost:8080/ || exit 1
        curl -f http://localhost:8080/getting-started || exit 1
        curl -f -s -o /dev/null -w "%{http_code}" http://localhost:8080/nonexistent | grep -q "404" || exit 1